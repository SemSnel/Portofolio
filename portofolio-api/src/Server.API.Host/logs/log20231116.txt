2023-11-16 09:28:49.876 +01:00 [WRN] The foreign key property 'DocumentProperty.DocumentId1' was created in shadow state because a conflicting property with the simple name 'DocumentId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-11-16 09:28:49.964 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 09:28:49.966 +01:00 [WRN] The entity type 'DocumentPropertyDataType' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 09:28:49.967 +01:00 [WRN] The entity type 'DocumentTypeProperty' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 09:28:49.967 +01:00 [WRN] The entity type 'DocumentType' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 09:28:49.967 +01:00 [WRN] The entity type 'Document' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 09:28:49.969 +01:00 [WRN] The entity type 'DocumentProperty' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 09:28:49.969 +01:00 [WRN] The entity type 'DocumentPropertyType' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 09:28:49.970 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 09:28:49.970 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 09:28:49.971 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 09:28:50.188 +01:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 09:28:50.199 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 09:28:50.208 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 09:28:50.226 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 09:28:50.389 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 09:28:50.400 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Media" AS "m")
2023-11-16 09:28:50.411 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 09:28:50.830 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 09:28:50.830 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 09:28:50.832 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 09:28:50.832 +01:00 [INF] Hosting environment: Development
2023-11-16 09:28:50.833 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 09:28:51.125 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 09:28:51.254 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 130.2574ms
2023-11-16 09:28:51.398 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 09:28:51.428 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/favicon-32x32.png - null null
2023-11-16 09:28:51.434 +01:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-11-16 09:28:51.435 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/favicon-32x32.png - 200 628 image/png 6.7689ms
2023-11-16 09:28:51.440 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/favicon-16x16.png - null null
2023-11-16 09:28:51.441 +01:00 [INF] Sending file. Request path: '/favicon-16x16.png'. Physical path: 'N/A'
2023-11-16 09:28:51.441 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/favicon-16x16.png - 200 665 image/png 0.9632ms
2023-11-16 09:28:51.502 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 104.9281ms
2023-11-16 09:28:55.536 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 09:28:55.578 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 09:28:55.589 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 09:28:55.600 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 09:28:55.616 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 09:28:55.622 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 09:28:55.732 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "WeatherForecasts" AS "w"
WHERE "w"."DeletedOn" IS NULL
2023-11-16 09:28:55.741 +01:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-11-16 09:28:55.744 +01:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-11-16 09:28:55.801 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "w"."Id", "w"."Date", CAST("w"."TemperatureC" AS INTEGER), "w"."CreatedBy", "w"."CreatedOn", "w"."DeletedBy", "w"."DeletedOn", "w"."LastModifiedBy", "w"."LastModifiedOn", "w"."Summary", "w"."TemperatureC", "w"."Summary" IS NULL
FROM "WeatherForecasts" AS "w"
WHERE "w"."DeletedOn" IS NULL
LIMIT @__p_1 OFFSET @__p_0
2023-11-16 09:28:55.843 +01:00 [INF] Cache miss for key GetWeatherforecastsQuery:1:10
2023-11-16 09:28:55.843 +01:00 [INF] Setting cache for key GetWeatherforecastsQuery:1:10 with time to live "1.00:00:00"
2023-11-16 09:28:55.846 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (228 milliseconds) 688cf010-73f1-47e1-ba6a-23704b63f07b  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 09:28:55.851 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 248.5329ms.
2023-11-16 09:28:55.854 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain.Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 09:28:55.860 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 268.1288ms
2023-11-16 09:28:55.861 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 09:28:55.863 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 327.2954ms
2023-11-16 09:29:01.139 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 09:29:01.142 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 09:29:01.143 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 09:29:01.147 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 09:29:01.155 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 09:29:01.156 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 09:29:01.165 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 09:29:01.165 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 09:29:01.166 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (10 milliseconds) 9bd6cdb7-407a-45aa-8463-9ddecbbd2bcc  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 09:29:01.166 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 18.195ms.
2023-11-16 09:29:01.167 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain.Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 09:29:01.167 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 22.9815ms
2023-11-16 09:29:01.168 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 09:29:01.168 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 29.4047ms
2023-11-16 09:39:16.857 +01:00 [ERR] Unexpected exception in TimingPipeFlusher.FlushAsync.
System.IO.IOException: The encryption operation failed, see inner exception.
 ---> System.ComponentModel.Win32Exception (14): Bad address
   --- End of inner exception stack trace ---
   at System.Net.Security.SslStream.WriteSingleChunk[TIOAdapter](ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.WriteAsyncInternal[TIOAdapter](ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Security.SslStream.WriteAsyncInternal[TIOAdapter](ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)
   at System.IO.Pipelines.StreamPipeWriter.FlushAsyncInternal(Boolean writeToStream, ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.IO.Pipelines.StreamPipeWriter.FlushAsyncInternal(Boolean writeToStream, ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   at System.IO.Pipelines.StreamPipeWriter.FlushAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.PipeWriterHelpers.ConcurrentPipeWriter.FlushAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.PipeWriterHelpers.TimingPipeFlusher.FlushAsync(MinDataRate minRate, Int64 count, IHttpOutputAborter outputAborter, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2FrameWriter.WriteGoAwayAsync(Int32 lastStreamId, Http2ErrorCode errorCode)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.UpdateConnectionState()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)
   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecuteFromThreadPool(Thread threadPoolThread)
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
   at System.Threading.Thread.StartCallback()
--- End of stack trace from previous location ---
   at System.Net.Security.SslStream.WriteAsyncInternal[TIOAdapter](ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)
   at System.IO.Pipelines.StreamPipeWriter.FlushAsyncInternal(Boolean writeToStream, ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.PipeWriterHelpers.ConcurrentPipeWriter.FlushAsyncAwaited(ValueTask`1 flushTask, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.PipeWriterHelpers.TimingPipeFlusher.TimeFlushAsyncAwaited(ValueTask`1 pipeFlushTask, MinDataRate minRate, IHttpOutputAborter outputAborter, CancellationToken cancellationToken)
2023-11-16 09:39:16.870 +01:00 [ERR] Unhandled exception while processing 0HMV6FO7TCPOM.
System.IO.IOException: The encryption operation failed, see inner exception.
 ---> System.ComponentModel.Win32Exception (14): Bad address
   --- End of inner exception stack trace ---
   at System.Net.Security.SslStream.WriteSingleChunk[TIOAdapter](ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.WriteAsyncInternal[TIOAdapter](ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.Net.Security.SslStream.WriteAsyncInternal[TIOAdapter](ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)
   at System.IO.Pipelines.StreamPipeWriter.FlushAsyncInternal(Boolean writeToStream, ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.IO.Pipelines.StreamPipeWriter.FlushAsyncInternal(Boolean writeToStream, ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   at System.IO.Pipelines.StreamPipeWriter.CompleteAsync(Exception exception)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at System.IO.Pipelines.StreamPipeWriter.CompleteAsync(Exception exception)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.DuplexPipeStreamAdapter`1.DisposeAsync()
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.DuplexPipeStreamAdapter`1.DisposeAsync()
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Threading.Tasks.Task`1.TrySetResult(TResult result)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.HttpConnection.ProcessRequestsAsync[TContext](IHttpApplication`1 httpApplication)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Threading.Tasks.Task`1.TrySetResult(TResult result)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(Task`1 task, TResult result)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)
   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecuteFromThreadPool(Thread threadPoolThread)
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
   at System.Threading.Thread.StartCallback()
--- End of stack trace from previous location ---
   at System.Net.Security.SslStream.WriteAsyncInternal[TIOAdapter](ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)
   at System.IO.Pipelines.StreamPipeWriter.FlushAsyncInternal(Boolean writeToStream, ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.IO.Pipelines.StreamPipeWriter.CompleteAsync(Exception exception)
   at System.IO.Pipelines.StreamPipeWriter.CompleteAsync(Exception exception)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.DuplexPipeStreamAdapter`1.DisposeAsync()
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.KestrelConnection`1.ExecuteAsync()
2023-11-16 09:39:25.306 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 09:39:25.313 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 09:39:25.313 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 09:39:25.315 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 09:39:25.323 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 09:39:25.323 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 09:39:25.324 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 09:39:25.324 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 09:39:25.324 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (1 milliseconds) e2e664bb-f6ee-4d08-82ec-d6e6d1ed9440  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 09:39:25.325 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 9.1715ms.
2023-11-16 09:39:25.325 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain.Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 09:39:25.325 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 11.5124ms
2023-11-16 09:39:25.326 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 09:39:25.326 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 20.0959ms
2023-11-16 09:39:30.636 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 09:39:30.638 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 09:39:30.638 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 09:39:30.640 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 09:39:30.643 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 09:39:30.644 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 09:39:30.647 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 09:39:30.647 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 09:39:30.648 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (4 milliseconds) a65d7324-fa31-4cb6-bac8-8c04c3ee227b  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 09:39:30.649 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 7.69ms.
2023-11-16 09:39:30.650 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain.Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 09:39:30.651 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 11.6399ms
2023-11-16 09:39:30.652 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 09:39:30.653 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 16.3617ms
2023-11-16 10:07:44.120 +01:00 [INF] Application is shutting down...
2023-11-16 10:13:53.859 +01:00 [WRN] The foreign key property 'DocumentProperty.DocumentId1' was created in shadow state because a conflicting property with the simple name 'DocumentId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-11-16 10:13:53.918 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:13:53.919 +01:00 [WRN] The entity type 'DocumentPropertyDataType' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:13:53.919 +01:00 [WRN] The entity type 'DocumentTypeProperty' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:13:53.920 +01:00 [WRN] The entity type 'DocumentType' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:13:53.920 +01:00 [WRN] The entity type 'Document' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:13:53.920 +01:00 [WRN] The entity type 'DocumentProperty' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:13:53.920 +01:00 [WRN] The entity type 'DocumentPropertyType' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:13:53.921 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:13:53.921 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:13:53.921 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:13:54.058 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 10:13:54.065 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 10:13:54.071 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 10:13:54.082 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 10:13:54.198 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 10:13:54.204 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Media" AS "m")
2023-11-16 10:13:54.212 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 10:13:54.518 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 10:13:54.518 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 10:13:54.521 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 10:13:54.522 +01:00 [INF] Hosting environment: Development
2023-11-16 10:13:54.522 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 10:13:55.169 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 10:13:55.237 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 68.7255ms
2023-11-16 10:13:55.349 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 10:13:55.434 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 85.2787ms
2023-11-16 10:14:08.357 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 10:14:08.395 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 10:14:08.408 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 10:14:08.418 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 10:14:08.433 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 10:14:08.440 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 10:14:08.549 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "WeatherForecasts" AS "w"
WHERE "w"."DeletedOn" IS NULL
2023-11-16 10:14:08.559 +01:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-11-16 10:14:08.563 +01:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-11-16 10:14:08.618 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "w"."Id", "w"."Date", CAST("w"."TemperatureC" AS INTEGER), "w"."CreatedBy", "w"."CreatedOn", "w"."DeletedBy", "w"."DeletedOn", "w"."LastModifiedBy", "w"."LastModifiedOn", "w"."Summary", "w"."TemperatureC", "w"."Summary" IS NULL
FROM "WeatherForecasts" AS "w"
WHERE "w"."DeletedOn" IS NULL
LIMIT @__p_1 OFFSET @__p_0
2023-11-16 10:14:08.659 +01:00 [INF] Cache miss for key GetWeatherforecastsQuery:1:10
2023-11-16 10:14:08.660 +01:00 [INF] Setting cache for key GetWeatherforecastsQuery:1:10 with time to live "1.00:00:00"
2023-11-16 10:14:08.662 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (227 milliseconds) 76f41587-194c-42c3-9dcf-66d513b9b29a  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 10:14:08.667 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 246.7924ms.
2023-11-16 10:14:08.669 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain.Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 10:14:08.674 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 264.3003ms
2023-11-16 10:14:08.675 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 10:14:08.677 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 320.2769ms
2023-11-16 10:15:30.641 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 10:15:30.645 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 10:15:30.646 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 10:15:30.647 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 10:15:30.652 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 10:15:30.653 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 10:15:30.669 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 10:15:30.669 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 10:15:30.670 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (17 milliseconds) f90f6184-9309-4dfc-b159-601e3544d535  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 10:15:30.670 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 22.3437ms.
2023-11-16 10:15:30.671 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain.Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 10:15:30.671 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 24.8867ms
2023-11-16 10:15:30.671 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 10:15:30.672 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 30.6649ms
2023-11-16 10:15:35.451 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 10:15:35.454 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 10:15:35.454 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 10:15:35.455 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 10:15:35.462 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 10:15:35.463 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 10:15:35.465 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 10:15:35.465 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 10:15:35.466 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (3 milliseconds) 3c81452e-fd01-41f9-aaaa-50b5894652a1  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 10:15:35.467 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 11.6226ms.
2023-11-16 10:15:35.468 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain.Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 10:15:35.469 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 14.3782ms
2023-11-16 10:15:35.470 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 10:15:35.470 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 19.6474ms
2023-11-16 10:19:35.581 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 10:19:35.582 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 10:19:35.582 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 10:19:35.583 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 10:19:35.584 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 10:19:35.584 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 10:19:35.585 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 10:19:35.585 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 10:19:35.585 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (1 milliseconds) df2a4ad9-4c42-4f36-ae4f-bff6a0b724a8  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 10:19:35.586 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.8652ms.
2023-11-16 10:19:35.587 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain.Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 10:19:35.587 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 4.6647ms
2023-11-16 10:19:35.588 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 10:19:35.588 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 7.3558ms
2023-11-16 10:19:39.195 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 10:19:39.197 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 10:19:39.198 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 10:19:39.200 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 10:19:39.202 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 10:19:39.203 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 10:19:39.203 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 10:19:39.203 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 10:19:39.204 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (2 milliseconds) 045ffe44-5361-473e-80cc-e6129e3e7d07  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 10:19:39.205 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.9311ms.
2023-11-16 10:19:39.205 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain.Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 10:19:39.206 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 6.0964ms
2023-11-16 10:19:39.206 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 10:19:39.206 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 11.6112ms
2023-11-16 10:19:50.284 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast?Take=100 - null null
2023-11-16 10:19:50.291 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 10:19:50.292 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 10:19:50.296 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 10:19:50.297 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 10:19:50.297 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 10:19:50.338 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "WeatherForecasts" AS "w"
WHERE "w"."DeletedOn" IS NULL
2023-11-16 10:19:50.339 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "w"."Id", "w"."Date", CAST("w"."TemperatureC" AS INTEGER), "w"."CreatedBy", "w"."CreatedOn", "w"."DeletedBy", "w"."DeletedOn", "w"."LastModifiedBy", "w"."LastModifiedOn", "w"."Summary", "w"."TemperatureC", "w"."Summary" IS NULL
FROM "WeatherForecasts" AS "w"
WHERE "w"."DeletedOn" IS NULL
LIMIT @__p_1 OFFSET @__p_0
2023-11-16 10:19:50.341 +01:00 [INF] Cache miss for key GetWeatherforecastsQuery:1:100
2023-11-16 10:19:50.341 +01:00 [INF] Setting cache for key GetWeatherforecastsQuery:1:100 with time to live "1.00:00:00"
2023-11-16 10:19:50.341 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (44 milliseconds) ef77629a-0fdc-4577-aa1f-7f1b7103a3c9  {"Skip":1,"Take":100,"$type":"GetWeatherforecastsQuery"}
2023-11-16 10:19:50.342 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 45.7114ms.
2023-11-16 10:19:50.342 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain.Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 10:19:50.344 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 51.6507ms
2023-11-16 10:19:50.345 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 10:19:50.345 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast?Take=100 - 200 null application/json; charset=utf-8; x-api-version=1.0 60.3419ms
2023-11-16 10:28:42.216 +01:00 [INF] Application is shutting down...
2023-11-16 10:33:25.854 +01:00 [WRN] The foreign key property 'DocumentProperty.DocumentId1' was created in shadow state because a conflicting property with the simple name 'DocumentId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-11-16 10:33:25.915 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:33:25.916 +01:00 [WRN] The entity type 'DocumentPropertyDataType' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:33:25.917 +01:00 [WRN] The entity type 'DocumentTypeProperty' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:33:25.917 +01:00 [WRN] The entity type 'DocumentType' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:33:25.917 +01:00 [WRN] The entity type 'Document' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:33:25.917 +01:00 [WRN] The entity type 'DocumentProperty' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:33:25.918 +01:00 [WRN] The entity type 'DocumentPropertyType' is configured to use schema 'Documents', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:33:25.918 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:33:25.918 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:33:25.918 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 10:33:26.059 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 10:33:26.067 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 10:33:26.075 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 10:33:26.085 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 10:33:26.203 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 10:33:26.210 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Media" AS "m")
2023-11-16 10:33:26.217 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 10:33:26.510 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 10:33:26.510 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 10:33:26.513 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 10:33:26.514 +01:00 [INF] Hosting environment: Development
2023-11-16 10:33:26.514 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 10:33:26.921 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 10:33:26.989 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 68.7989ms
2023-11-16 10:33:27.098 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 10:33:27.173 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 74.9468ms
2023-11-16 10:42:21.870 +01:00 [INF] Application is shutting down...
2023-11-16 14:56:57.461 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 14:56:57.498 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 14:56:57.499 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 14:56:57.499 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 14:56:57.594 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 14:56:57.601 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 14:56:57.607 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 14:56:57.615 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 14:56:57.719 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 14:56:57.727 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 14:56:58.002 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 14:56:58.003 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 14:56:58.005 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 14:56:58.006 +01:00 [INF] Hosting environment: Development
2023-11-16 14:56:58.006 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 14:56:58.301 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 14:56:58.361 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 61.2818ms
2023-11-16 14:56:58.464 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 14:56:58.519 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/apple-touch-icon-precomposed.png - null null
2023-11-16 14:56:58.526 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 61.6536ms
2023-11-16 14:56:58.533 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/apple-touch-icon-precomposed.png - 404 0 null 13.801ms
2023-11-16 14:56:58.534 +01:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7063/apple-touch-icon-precomposed.png, Response status code: 404
2023-11-16 14:56:58.543 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/apple-touch-icon.png - null null
2023-11-16 14:56:58.544 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/apple-touch-icon.png - 404 0 null 1.0954ms
2023-11-16 14:56:58.544 +01:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7063/apple-touch-icon.png, Response status code: 404
2023-11-16 14:57:00.939 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 14:57:00.964 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 14:57:00.989 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 14:57:01.006 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 14:57:01.026 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 14:57:01.031 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 14:57:01.106 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass55_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
2023-11-16 14:57:01.120 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass55_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
   at SemSnel.Portofolio.Server.Application.Common.Performances.PerformanceBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Performances/PerformanceBehaviour.cs:line 27
   at SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get(GetWeatherforecastsQuery query) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Presentation/WeatherForecasts/v1/WeatherForecastController.cs:line 38
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2023-11-16 14:57:01.125 +01:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-11-16 14:57:01.137 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 145.7911ms
2023-11-16 14:57:01.137 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 14:57:01.139 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 500 null application/problem+json; charset=utf-8; x-api-version=1.0 200.0907ms
2023-11-16 14:58:43.333 +01:00 [INF] Application is shutting down...
2023-11-16 14:58:45.864 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 14:58:45.901 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 14:58:45.902 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 14:58:45.902 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 14:58:45.991 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-11-16 14:58:46.030 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2023-11-16 14:58:46.037 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 14:58:46.040 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 14:58:46.049 +01:00 [INF] Applying migration '20231116135839_InitialCreate'.
2023-11-16 14:58:46.062 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "DomainMessages" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_DomainMessages" PRIMARY KEY,
    "Type" TEXT NOT NULL,
    "Data" TEXT NOT NULL,
    "CreatedOn" TEXT NOT NULL,
    "ProcessedOn" TEXT NULL
);
2023-11-16 14:58:46.063 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "IdempotentRequests" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_IdempotentRequests" PRIMARY KEY,
    "Name" TEXT NOT NULL,
    "CreatedOn" TEXT NOT NULL,
    "RequestId" TEXT NOT NULL,
    "RequestBody" TEXT NOT NULL,
    "RequestHeaders" TEXT NOT NULL,
    "ResponseBody" TEXT NULL,
    "ResponseStatusCode" INTEGER NOT NULL
);
2023-11-16 14:58:46.063 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "InboxMessages" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_InboxMessages" PRIMARY KEY,
    "Type" TEXT NOT NULL,
    "Data" TEXT NOT NULL,
    "ProcessedOn" TEXT NULL
);
2023-11-16 14:58:46.064 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "OutboxMessages" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_OutboxMessages" PRIMARY KEY,
    "Data" TEXT NOT NULL,
    "Type" TEXT NOT NULL,
    "ProcessedOn" TEXT NULL
);
2023-11-16 14:58:46.064 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "WeatherForecasts" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_WeatherForecasts" PRIMARY KEY,
    "Date" TEXT NOT NULL,
    "TemperatureC" INTEGER NOT NULL,
    "Summary" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "CreatedOn" TEXT NOT NULL,
    "LastModifiedBy" TEXT NULL,
    "LastModifiedOn" TEXT NULL,
    "DeletedBy" TEXT NULL,
    "DeletedOn" TEXT NULL
);
2023-11-16 14:58:46.064 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20231116135839_InitialCreate', '8.0.0-preview.6.23329.4');
2023-11-16 14:58:46.170 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 14:58:46.266 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.268 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.268 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.268 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.269 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.269 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.270 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.270 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.271 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.271 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.271 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.272 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.272 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.273 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.273 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.273 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.274 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.274 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.275 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.275 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.275 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.276 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.276 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.276 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.277 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.277 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.277 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.278 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.278 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.278 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.279 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.285 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.285 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.285 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.286 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.286 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.286 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.287 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.287 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.287 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.288 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.288 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.289 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.289 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.289 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.290 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.290 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.290 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.291 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.291 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.291 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.292 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.292 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.293 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.293 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.293 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.294 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.294 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.294 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.295 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.295 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.296 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.296 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.296 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.297 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.297 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.297 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.298 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.298 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.298 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.299 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.299 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.299 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.300 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.300 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.300 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.301 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.301 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.301 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.302 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.302 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.302 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.303 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.303 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.303 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.304 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.304 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.304 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.305 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.305 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.305 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.306 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.306 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.306 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.307 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.307 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.307 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.308 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.308 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 6), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.309 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Date), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?' (DbType = Guid), @p7='?' (DbType = DateTime), @p8='?' (Size = 5), @p9='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "WeatherForecasts" ("Id", "CreatedBy", "CreatedOn", "Date", "DeletedBy", "DeletedOn", "LastModifiedBy", "LastModifiedOn", "Summary", "TemperatureC")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-11-16 14:58:46.318 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 14:58:46.592 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 14:58:46.593 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 14:58:46.595 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 14:58:46.596 +01:00 [INF] Hosting environment: Development
2023-11-16 14:58:46.596 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 14:58:46.840 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 14:58:46.904 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 64.7402ms
2023-11-16 14:58:47.002 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 14:58:47.060 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 58.0359ms
2023-11-16 14:58:49.408 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 14:58:49.452 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 14:58:49.470 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 14:58:49.483 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 14:58:49.500 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 14:58:49.504 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 14:58:49.578 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass55_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
2023-11-16 14:58:49.592 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass55_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
   at SemSnel.Portofolio.Server.Application.Common.Performances.PerformanceBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Performances/PerformanceBehaviour.cs:line 27
   at SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get(GetWeatherforecastsQuery query) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Presentation/WeatherForecasts/v1/WeatherForecastController.cs:line 38
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2023-11-16 14:58:49.596 +01:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-11-16 14:58:49.607 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 135.0392ms
2023-11-16 14:58:49.607 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 14:58:49.608 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 500 null application/problem+json; charset=utf-8; x-api-version=1.0 200.7319ms
2023-11-16 15:00:32.528 +01:00 [INF] Application is shutting down...
2023-11-16 15:00:37.619 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:00:37.658 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:00:37.658 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:00:37.659 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:00:37.758 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:00:37.765 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:00:37.771 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 15:00:37.781 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 15:00:37.887 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 15:00:37.895 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 15:00:38.164 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 15:00:38.164 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 15:00:38.167 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 15:00:38.167 +01:00 [INF] Hosting environment: Development
2023-11-16 15:00:38.167 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 15:00:38.518 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 15:00:38.579 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 61.6309ms
2023-11-16 15:00:38.678 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 15:00:38.737 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 59.8065ms
2023-11-16 15:00:41.294 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:00:41.333 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:00:41.350 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:00:41.364 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:00:41.380 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:00:41.385 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:00:41.458 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
2023-11-16 15:00:41.472 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
   at SemSnel.Portofolio.Server.Application.Common.Performances.PerformanceBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Performances/PerformanceBehaviour.cs:line 27
   at SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get(GetWeatherforecastsQuery query) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Presentation/WeatherForecasts/v1/WeatherForecastController.cs:line 38
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2023-11-16 15:00:41.477 +01:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-11-16 15:00:41.488 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 136.2152ms
2023-11-16 15:00:41.488 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:00:41.490 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 500 null application/problem+json; charset=utf-8; x-api-version=1.0 196.2645ms
2023-11-16 15:03:16.902 +01:00 [INF] Application is shutting down...
2023-11-16 15:03:19.571 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:03:19.606 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:03:19.607 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:03:19.607 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:03:19.697 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:03:19.703 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:03:19.709 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 15:03:19.717 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 15:03:19.819 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 15:03:19.826 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 15:03:20.116 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 15:03:20.116 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 15:03:20.119 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 15:03:20.119 +01:00 [INF] Hosting environment: Development
2023-11-16 15:03:20.119 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 15:03:20.607 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 15:03:20.668 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 61.8801ms
2023-11-16 15:03:20.766 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 15:03:20.827 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 61.329ms
2023-11-16 15:03:23.042 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:03:23.086 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:03:23.102 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:03:23.114 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:03:23.131 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:03:23.136 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:03:23.202 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
2023-11-16 15:03:23.216 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
   at SemSnel.Portofolio.Server.Application.Common.Performances.PerformanceBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Performances/PerformanceBehaviour.cs:line 27
   at SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get(GetWeatherforecastsQuery query) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Presentation/WeatherForecasts/v1/WeatherForecastController.cs:line 38
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2023-11-16 15:03:23.220 +01:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-11-16 15:03:23.232 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 127.648ms
2023-11-16 15:03:23.232 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:03:23.234 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 500 null application/problem+json; charset=utf-8; x-api-version=1.0 191.7192ms
2023-11-16 15:03:55.017 +01:00 [INF] Application is shutting down...
2023-11-16 15:03:58.264 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:03:58.299 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:03:58.299 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:03:58.300 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:03:58.395 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:03:58.401 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:03:58.408 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 15:03:58.417 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 15:03:58.517 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 15:03:58.525 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 15:03:58.784 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 15:03:58.784 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 15:03:58.787 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 15:03:58.787 +01:00 [INF] Hosting environment: Development
2023-11-16 15:03:58.787 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 15:03:59.299 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 15:03:59.358 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 60.5663ms
2023-11-16 15:03:59.456 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 15:03:59.516 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 59.4384ms
2023-11-16 15:04:03.211 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:04:03.255 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:04:03.273 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:04:03.286 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:04:03.303 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:04:03.307 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:04:03.375 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
2023-11-16 15:04:03.389 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
   at SemSnel.Portofolio.Server.Application.Common.Performances.PerformanceBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Performances/PerformanceBehaviour.cs:line 27
   at SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get(GetWeatherforecastsQuery query) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Presentation/WeatherForecasts/v1/WeatherForecastController.cs:line 38
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2023-11-16 15:04:03.394 +01:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-11-16 15:04:03.404 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 129.3015ms
2023-11-16 15:04:03.404 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:04:03.406 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 500 null application/problem+json; charset=utf-8; x-api-version=1.0 194.9287ms
2023-11-16 15:07:22.381 +01:00 [INF] Application is shutting down...
2023-11-16 15:07:24.800 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:07:24.834 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:07:24.835 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:07:24.835 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:07:24.923 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:07:24.929 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:07:24.934 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 15:07:24.942 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 15:07:25.042 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 15:07:25.048 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 15:07:25.324 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 15:07:25.325 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 15:07:25.327 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 15:07:25.328 +01:00 [INF] Hosting environment: Development
2023-11-16 15:07:25.328 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 15:07:25.896 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 15:07:25.961 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 66.1198ms
2023-11-16 15:07:26.060 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 15:07:26.123 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 62.6658ms
2023-11-16 15:07:28.473 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:07:28.520 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:07:28.539 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:07:28.551 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:07:28.567 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:07:28.571 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:07:28.638 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
2023-11-16 15:07:28.652 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
   at SemSnel.Portofolio.Server.Application.Common.Performances.PerformanceBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Performances/PerformanceBehaviour.cs:line 27
   at SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get(GetWeatherforecastsQuery query) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Presentation/WeatherForecasts/v1/WeatherForecastController.cs:line 38
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2023-11-16 15:07:28.657 +01:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-11-16 15:07:28.669 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 128.031ms
2023-11-16 15:07:28.669 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:07:28.671 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 500 null application/problem+json; charset=utf-8; x-api-version=1.0 198.4608ms
2023-11-16 15:08:48.561 +01:00 [INF] Application is shutting down...
2023-11-16 15:08:52.397 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:08:52.432 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:08:52.432 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:08:52.432 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:08:52.521 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:08:52.527 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:08:52.533 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 15:08:52.541 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 15:08:52.639 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 15:08:52.646 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 15:08:52.950 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 15:08:52.950 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 15:08:52.953 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 15:08:52.953 +01:00 [INF] Hosting environment: Development
2023-11-16 15:08:52.953 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 15:08:53.451 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 15:08:53.512 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 63.1136ms
2023-11-16 15:08:53.609 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 15:08:53.668 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 59.2509ms
2023-11-16 15:08:56.365 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:08:56.412 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:08:56.429 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:08:56.443 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:08:56.460 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:08:56.466 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:08:56.533 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
2023-11-16 15:08:56.546 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
   at SemSnel.Portofolio.Server.Application.Common.Performances.PerformanceBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Performances/PerformanceBehaviour.cs:line 27
   at SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get(GetWeatherforecastsQuery query) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Presentation/WeatherForecasts/v1/WeatherForecastController.cs:line 38
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2023-11-16 15:08:56.551 +01:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-11-16 15:08:56.561 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 130.1867ms
2023-11-16 15:08:56.561 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:08:56.563 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 500 null application/problem+json; charset=utf-8; x-api-version=1.0 197.4944ms
2023-11-16 15:11:22.416 +01:00 [INF] Application is shutting down...
2023-11-16 15:11:25.147 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:11:25.184 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:11:25.184 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:11:25.184 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:11:25.277 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:11:25.284 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:11:25.290 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 15:11:25.298 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 15:11:25.400 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 15:11:25.408 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 15:11:25.703 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 15:11:25.703 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 15:11:25.705 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 15:11:25.706 +01:00 [INF] Hosting environment: Development
2023-11-16 15:11:25.706 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 15:11:26.179 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 15:11:26.243 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 65.2224ms
2023-11-16 15:11:26.344 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 15:11:26.406 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 61.9367ms
2023-11-16 15:11:29.197 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:11:29.237 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:11:29.255 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:11:29.269 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:11:29.286 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:11:29.291 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:11:29.359 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
2023-11-16 15:11:29.373 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
   at SemSnel.Portofolio.Server.Application.Common.Performances.PerformanceBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Performances/PerformanceBehaviour.cs:line 27
   at SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get(GetWeatherforecastsQuery query) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Presentation/WeatherForecasts/v1/WeatherForecastController.cs:line 38
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2023-11-16 15:11:29.378 +01:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-11-16 15:11:29.388 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 130.9634ms
2023-11-16 15:11:29.388 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:11:29.389 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 500 null application/problem+json; charset=utf-8; x-api-version=1.0 192.5389ms
2023-11-16 15:11:59.433 +01:00 [INF] Application is shutting down...
2023-11-16 15:12:01.031 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:12:01.066 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:12:01.067 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:12:01.067 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:12:01.158 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:12:01.164 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:12:01.170 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 15:12:01.178 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 15:12:01.278 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 15:12:01.286 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 15:12:01.557 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 15:12:01.558 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 15:12:01.560 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 15:12:01.561 +01:00 [INF] Hosting environment: Development
2023-11-16 15:12:01.561 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 15:12:02.058 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 15:12:02.117 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 59.7269ms
2023-11-16 15:12:02.216 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 15:12:02.280 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 63.5187ms
2023-11-16 15:12:04.842 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:12:04.888 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:12:04.906 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:12:04.920 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:12:04.937 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:12:04.942 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:12:05.010 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
2023-11-16 15:12:05.024 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
   at SemSnel.Portofolio.Server.Application.Common.Performances.PerformanceBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Performances/PerformanceBehaviour.cs:line 27
   at SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get(GetWeatherforecastsQuery query) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Presentation/WeatherForecasts/v1/WeatherForecastController.cs:line 38
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2023-11-16 15:12:05.029 +01:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-11-16 15:12:05.039 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 130.7703ms
2023-11-16 15:12:05.039 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:12:05.040 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 500 null application/problem+json; charset=utf-8; x-api-version=1.0 198.2472ms
2023-11-16 15:12:47.731 +01:00 [INF] Application is shutting down...
2023-11-16 15:12:51.901 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:12:51.935 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:12:51.935 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:12:51.936 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:12:52.029 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:12:52.035 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:12:52.041 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 15:12:52.050 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 15:12:52.152 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 15:12:52.159 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 15:12:52.417 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 15:12:52.417 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 15:12:52.419 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 15:12:52.420 +01:00 [INF] Hosting environment: Development
2023-11-16 15:12:52.420 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 15:12:52.940 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 15:12:52.998 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 58.8435ms
2023-11-16 15:12:53.095 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 15:12:53.159 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 64.1585ms
2023-11-16 15:12:56.070 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:12:56.110 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:12:56.127 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:12:56.141 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:12:56.159 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:12:56.163 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:12:56.231 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
2023-11-16 15:12:56.245 +01:00 [ERR] An unhandled exception occurred
Mapster.CompileException: Error while compiling
source=SemSnel.Portofolio.Domain.Contexts.WeatherForecasts.WeatherForecast
destination=SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto
type=Projection
 ---> Mapster.CompileException: Error while compiling
source=System.DateOnly
destination=System.DateTime
type=Projection
 ---> System.InvalidOperationException: Cannot convert immutable type, please consider using 'MapWith' method to create mapping
   at Mapster.Adapters.PrimitiveAdapter.ConvertType(Expression source, Type destinationType, CompileArgument arg)
   at Mapster.Adapters.PrimitiveAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateInlineMapExpression(Type sourceType, Type destinationType, MapType mapType, CompileContext context, MemberMapping mapping)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpressionCore(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseAdapter.CreateAdaptExpression(Expression source, Type destinationType, CompileArgument arg, MemberMapping mapping, Expression destination)
   at Mapster.Adapters.BaseClassAdapter.CreateInstantiationExpression(Expression source, ClassMapping classConverter, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInstantiationExpression(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInstantiationExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.RecordTypeAdapter.CreateInlineExpression(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateInlineExpressionBody(Expression source, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateExpressionBody(Expression source, Expression destination, CompileArgument arg)
   at Mapster.Adapters.BaseAdapter.CreateAdaptFunc(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   --- End of inner exception stack trace ---
   at Mapster.TypeAdapterConfig.CreateMapExpression(CompileArgument arg)
   at Mapster.TypeAdapterConfig.CreateMapExpression(TypeTuple tuple, MapType mapType)
   at Mapster.TypeAdapterConfig.CreateProjectionCallExpression(TypeTuple tuple)
   at Mapster.TypeAdapterConfig.<>c__DisplayClass56_0`1.<AddToHash>b__0(TypeTuple types)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Mapster.TypeAdapterConfig.AddToHash[T](ConcurrentDictionary`2 hash, TypeTuple key, Func`2 func)
   at Mapster.TypeAdapterConfig.GetProjectionCallExpression(Type sourceType, Type destinationType)
   at Mapster.Extensions.ProjectToType[TDestination](IQueryable source, TypeAdapterConfig config)
   at SemSnel.Portofolio.Server.Application.Common.Persistence.IQueryableExtensions.ProjectTo[TDestination](IQueryable source, IMapper mapper) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/IQueryableExtensions.cs:line 21
   at SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsHandler.Handle(GetWeatherforecastsQuery request, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/WeatherForecasts/Features/Queries/Get/GetWeatherforecastsQuery.cs:line 26
   at SemSnel.Portofolio.Server.Application.Common.Persistence.UnitOfWorkBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Persistence/UnitOfWorkBehaviour.cs:line 19
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.<>c__DisplayClass2_0.<<Handle>b__0>d.MoveNext() in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 38
--- End of stack trace from previous location ---
   at SemSnel.Portofolio.Infrastructure.Common.Caching.CachingService.GetOrSetAsync[TResponse](String key, Func`1 factory, Nullable`1 timeToLive) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Infrastructure/Common/Caching/CachingService.cs:line 47
   at SemSnel.Portofolio.Server.Application.Common.Caching.CachingBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Caching/CachingBehaviour.cs:line 36
   at SemSnel.Portofolio.Server.Application.Common.Validations.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Validations/ValidationBehaviour.cs:line 49
   at SemSnel.Portofolio.Server.Application.Common.Authorisations.Behaviours.AuthorizationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Authorisations/Behaviours/AuthorizationBehaviour.cs:line 56
   at SemSnel.Portofolio.Server.Application.Common.UnHandledExceptions.UnHandledExceptionBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/UnHandledExceptions/UnHandledExceptionBehaviour.cs:line 28
   at SemSnel.Portofolio.Server.Application.Common.Performances.PerformanceBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Application/Common/Performances/PerformanceBehaviour.cs:line 27
   at SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get(GetWeatherforecastsQuery query) in /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.Presentation/WeatherForecasts/v1/WeatherForecastController.cs:line 38
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2023-11-16 15:12:56.250 +01:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-11-16 15:12:56.260 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 131.1032ms
2023-11-16 15:12:56.260 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:12:56.261 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 500 null application/problem+json; charset=utf-8; x-api-version=1.0 191.4257ms
2023-11-16 15:14:04.839 +01:00 [INF] Application is shutting down...
2023-11-16 15:16:04.523 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:16:04.559 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:16:04.559 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:16:04.559 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:16:04.653 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:16:04.658 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:16:04.664 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 15:16:04.673 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 15:16:04.771 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 15:16:04.779 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 15:16:05.054 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 15:16:05.055 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 15:16:05.057 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 15:16:05.058 +01:00 [INF] Hosting environment: Development
2023-11-16 15:16:05.058 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 15:16:05.587 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 15:16:05.650 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 64.4296ms
2023-11-16 15:16:05.750 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 15:16:05.811 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 60.1762ms
2023-11-16 15:16:08.303 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:16:08.339 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:16:08.356 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:16:08.369 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:16:08.387 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:16:08.392 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:16:08.481 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "WeatherForecasts" AS "w"
WHERE "w"."DeletedOn" IS NULL
2023-11-16 15:16:08.488 +01:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-11-16 15:16:08.491 +01:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-11-16 15:16:08.534 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "w"."Date", CAST("w"."TemperatureC" AS INTEGER), "w"."Id", "w"."CreatedBy", "w"."CreatedOn", "w"."DeletedBy", "w"."DeletedOn", "w"."LastModifiedBy", "w"."LastModifiedOn", "w"."Summary", "w"."TemperatureC"
FROM "WeatherForecasts" AS "w"
WHERE "w"."DeletedOn" IS NULL
LIMIT @__p_1 OFFSET @__p_0
2023-11-16 15:16:08.568 +01:00 [INF] Cache miss for key GetWeatherforecastsQuery:1:10
2023-11-16 15:16:08.568 +01:00 [INF] Setting cache for key GetWeatherforecastsQuery:1:10 with time to live "1.00:00:00"
2023-11-16 15:16:08.570 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (181 milliseconds) ec0fe8dc-e3d9-4aba-96ed-a3cb19251abb  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 15:16:08.574 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 202.5365ms.
2023-11-16 15:16:08.576 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain._Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 15:16:08.581 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 223.608ms
2023-11-16 15:16:08.582 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:16:08.584 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 280.8227ms
2023-11-16 15:16:15.142 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:16:15.146 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:16:15.147 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:16:15.149 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:16:15.155 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:16:15.155 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:16:15.180 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 15:16:15.180 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 15:16:15.180 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (25 milliseconds) f565ae61-96c3-4048-8130-1f63a9384034  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 15:16:15.181 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 31.028ms.
2023-11-16 15:16:15.182 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain._Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 15:16:15.183 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 35.1219ms
2023-11-16 15:16:15.183 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:16:15.184 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 41.6028ms
2023-11-16 15:16:15.948 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:16:15.955 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:16:15.959 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:16:15.962 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:16:15.970 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:16:15.971 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:16:15.972 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 15:16:15.973 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 15:16:15.974 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (3 milliseconds) 4fd6968e-cf68-4ca9-86a9-de3f3d99d3a2  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 15:16:15.974 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 12.036ms.
2023-11-16 15:16:15.975 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain._Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 15:16:15.976 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 15.0598ms
2023-11-16 15:16:15.976 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:16:15.976 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 28.3286ms
2023-11-16 15:20:23.094 +01:00 [INF] Application is shutting down...
2023-11-16 15:21:53.619 +01:00 [WRN] The entity type 'IdempotentRequest' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:21:53.655 +01:00 [WRN] The entity type 'DomainMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:21:53.655 +01:00 [WRN] The entity type 'InboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:21:53.655 +01:00 [WRN] The entity type 'OutboxMessage' is configured to use schema 'dbo', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
2023-11-16 15:21:53.744 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:21:53.750 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2023-11-16 15:21:53.756 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-11-16 15:21:53.764 +01:00 [INF] No migrations were applied. The database is already up to date.
2023-11-16 15:21:53.859 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "WeatherForecasts" AS "w"
    WHERE "w"."DeletedOn" IS NULL)
2023-11-16 15:21:53.866 +01:00 [INF] User profile is available. Using '/Users/sem.snel/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-11-16 15:21:54.138 +01:00 [INF] Now listening on: https://localhost:7063
2023-11-16 15:21:54.138 +01:00 [INF] Now listening on: http://localhost:5236
2023-11-16 15:21:54.140 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-16 15:21:54.141 +01:00 [INF] Hosting environment: Development
2023-11-16 15:21:54.141 +01:00 [INF] Content root path: /Users/sem.snel/Documents/Avans/Portofolio/portofolio-api/src/Server.API.Host
2023-11-16 15:21:54.710 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/index.html - null null
2023-11-16 15:21:54.774 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/index.html - 200 null text/html;charset=utf-8 65.0042ms
2023-11-16 15:21:54.877 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - null null
2023-11-16 15:21:54.938 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 60.9127ms
2023-11-16 15:22:01.495 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:22:01.539 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:22:01.557 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:22:01.571 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:22:01.589 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:22:01.593 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:22:01.682 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "WeatherForecasts" AS "w"
WHERE "w"."DeletedOn" IS NULL
2023-11-16 15:22:01.689 +01:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-11-16 15:22:01.691 +01:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-11-16 15:22:01.735 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "w"."Date", CAST("w"."TemperatureC" AS INTEGER), "w"."Id", "w"."CreatedBy", "w"."CreatedOn", "w"."DeletedBy", "w"."DeletedOn", "w"."LastModifiedBy", "w"."LastModifiedOn", "w"."Summary", "w"."TemperatureC"
FROM "WeatherForecasts" AS "w"
WHERE "w"."DeletedOn" IS NULL
LIMIT @__p_1 OFFSET @__p_0
2023-11-16 15:22:01.768 +01:00 [INF] Cache miss for key GetWeatherforecastsQuery:1:10
2023-11-16 15:22:01.769 +01:00 [INF] Setting cache for key GetWeatherforecastsQuery:1:10 with time to live "1.00:00:00"
2023-11-16 15:22:01.771 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (180 milliseconds) 4a46096f-db78-417d-81dc-939a74663c41  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 15:22:01.775 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 201.9089ms.
2023-11-16 15:22:01.777 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain._Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 15:22:01.783 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 223.5457ms
2023-11-16 15:22:01.783 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:22:01.784 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 289.369ms
2023-11-16 15:22:05.250 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:22:05.253 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:22:05.254 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:22:05.256 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:22:05.261 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:22:05.262 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:22:05.289 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 15:22:05.290 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 15:22:05.290 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (29 milliseconds) 15455c64-a87f-4eb3-a10a-1fa504e1500d  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 15:22:05.291 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 34.6675ms.
2023-11-16 15:22:05.291 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain._Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 15:22:05.292 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 37.4277ms
2023-11-16 15:22:05.292 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:22:05.292 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 42.1708ms
2023-11-16 15:22:09.135 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:22:09.139 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:22:09.139 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:22:09.140 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:22:09.147 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:22:09.148 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:22:09.149 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 15:22:09.150 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 15:22:09.155 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (3 milliseconds) a0c533e8-85a4-4766-94e1-8b46674e61b1  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 15:22:09.161 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 20.0037ms.
2023-11-16 15:22:09.161 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain._Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 15:22:09.162 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 22.0115ms
2023-11-16 15:22:09.162 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:22:09.162 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 26.6967ms
2023-11-16 15:22:10.036 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:22:10.038 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:22:10.040 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:22:10.042 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:22:10.045 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:22:10.046 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:22:10.047 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 15:22:10.047 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 15:22:10.048 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (2 milliseconds) 8e30d13b-aaae-4983-a9aa-78bcca004215  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 15:22:10.050 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 5.5124ms.
2023-11-16 15:22:10.051 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain._Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 15:22:10.052 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 11.2112ms
2023-11-16 15:22:10.052 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:22:10.053 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 17.6272ms
2023-11-16 15:22:10.746 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:22:10.747 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:22:10.748 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:22:10.749 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:22:10.751 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:22:10.751 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:22:10.752 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 15:22:10.753 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 15:22:10.753 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (2 milliseconds) f372cc6e-05bc-413d-99c8-ca58d7cc6876  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 15:22:10.754 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.6237ms.
2023-11-16 15:22:10.755 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain._Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 15:22:10.757 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 7.73ms
2023-11-16 15:22:10.758 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:22:10.759 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 13.0721ms
2023-11-16 15:51:29.478 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:51:29.480 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:51:29.481 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:51:29.482 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:51:29.484 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:51:29.484 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:51:29.487 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 15:51:29.487 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 15:51:29.488 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (4 milliseconds) 9a26e1c8-c955-46dc-a79d-9745bfa71814  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 15:51:29.489 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 5.7608ms.
2023-11-16 15:51:29.489 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain._Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 15:51:29.490 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 8.211ms
2023-11-16 15:51:29.490 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:51:29.491 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 12.1941ms
2023-11-16 15:54:31.539 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:54:31.541 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:54:31.542 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:54:31.542 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:54:31.543 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:54:31.544 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:54:31.545 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 15:54:31.545 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 15:54:31.545 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (1 milliseconds) 4eeede56-608f-43a4-98ac-5065f186c158  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 15:54:31.547 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.6412ms.
2023-11-16 15:54:31.547 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain._Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 15:54:31.548 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 5.8979ms
2023-11-16 15:54:31.549 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:54:31.550 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 10.9687ms
2023-11-16 15:54:32.915 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:54:32.916 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:54:32.916 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:54:32.917 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:54:32.919 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:54:32.920 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:54:32.921 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 15:54:32.922 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 15:54:32.923 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (3 milliseconds) 76fc2b8d-2a37-42a3-a680-d88e8c506c56  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 15:54:32.924 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 6.6785ms.
2023-11-16 15:54:32.926 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain._Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 15:54:32.927 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 10.3808ms
2023-11-16 15:54:32.927 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:54:32.928 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 13.0518ms
2023-11-16 15:58:26.613 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:58:26.614 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:58:26.616 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:58:26.618 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:58:26.620 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:58:26.625 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:58:26.626 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 15:58:26.626 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 15:58:26.627 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (6 milliseconds) 8ec32275-9c31-4230-a03e-ac22bb692f68  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 15:58:26.628 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 8.8224ms.
2023-11-16 15:58:26.629 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain._Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 15:58:26.630 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 12.578ms
2023-11-16 15:58:26.631 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:58:26.631 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 18.4893ms
2023-11-16 15:58:43.222 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7063/api/WeatherForecast - null null
2023-11-16 15:58:43.224 +01:00 [INF] Executing endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:58:43.225 +01:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(SemSnel.Portofolio.Server.Application.WeatherForecasts.Features.Queries.Get.GetWeatherforecastsQuery) on controller SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController (Server.Presentation).
2023-11-16 15:58:43.226 +01:00 [INF] Executing action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) - Validation state: "Valid"
2023-11-16 15:58:43.227 +01:00 [INF] Handling GetWeatherforecastsQuery for user Anonymous at System.Func`1[System.DateTime]
2023-11-16 15:58:43.227 +01:00 [INF] Request GetWeatherforecastsQuery is authorized
2023-11-16 15:58:43.229 +01:00 [INF] Cache hit for key GetWeatherforecastsQuery:1:10
2023-11-16 15:58:43.229 +01:00 [INF] Returning cached response for key GetWeatherforecastsQuery:1:10
2023-11-16 15:58:43.230 +01:00 [INF] CleanArchitecture Request: GetWeatherforecastsQuery (3 milliseconds) 01178620-b2ec-4602-8a8a-5dcb8f70727a  {"Skip":1,"Take":10,"$type":"GetWeatherforecastsQuery"}
2023-11-16 15:58:43.233 +01:00 [INF] Executed action method SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 6.6836ms.
2023-11-16 15:58:43.233 +01:00 [INF] Executing OkObjectResult, writing value of type 'SemSnel.Portofolio.Domain._Common.Pagination.PaginatedList`1[[SemSnel.Portofolio.Server.Application.WeatherForecasts.Dtos.WeatherForecastDto, Server.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-16 15:58:43.234 +01:00 [INF] Executed action SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation) in 8.8622ms
2023-11-16 15:58:43.235 +01:00 [INF] Executed endpoint 'SemSnel.Portofolio.Server.WeatherForecasts.v1.WeatherForecastController.Get (Server.Presentation)'
2023-11-16 15:58:43.235 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7063/api/WeatherForecast - 200 null application/json; charset=utf-8; x-api-version=1.0 12.8177ms
2023-11-16 23:17:47.151 +01:00 [INF] Application is shutting down...
